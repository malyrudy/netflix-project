{"ast":null,"code":"var _jsxFileName = \"/Users/lukasrucky/Documents/GitHub/netflix-project/src/components/MovieSlider.js\";\nimport \"../components/MovieSlider.css\";\nimport allMovies from \"../data\";\nimport { useState, useEffect } from \"react\";\nimport categories from \"./categories\";\nimport { FaArrowCircleLeft, FaArrowCircleRight } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieSlider = props => {\n  const typeOfMovie = props.categoryOfMovies;\n  const vysledneFilmy = allMovies.filter(oneMovie => {\n    return oneMovie[\"category\"].includes(typeOfMovie);\n  });\n\n  // useEffect(() => {\n  //     const initSlider = () => {\n  //         const singleSlider = document.querySelectorAll(\".movie-slider\");\n  //         console.log(singleSlider);\n  //         singleSlider.forEach((oneSlider) => {\n  //             const slideButtons = oneSlider.querySelectorAll(\".arrow-button\");\n  //             const imageList = oneSlider.querySelector(\".movies-list\");\n  //             const maxScrollLeft = imageList.scrollWidth - imageList.clientWidth;\n\n  //             // Slide images according to slide buttons click\n  //             slideButtons.forEach(button => {\n  //             button.addEventListener(\"click\", () => {\n  //                 const direction = button.id === \"prev-slide\" ? -1 : 1;\n  //                 const scrollAmount = imageList.clientWidth * direction;\n  //                 imageList.scrollBy({ left: scrollAmount, behavior: \"smooth\"})\n  //             })\n  //         })\n  //         // Hiding the buttons\n  //         const handleSlideButtons = () => {\n  //             slideButtons[0].style.display = imageList.scrollLeft <= 0 ? \"none\" : \"block\";\n  //             slideButtons[1].style.display = imageList.scrollLeft >= maxScrollLeft ? \"none\" : \"block\";\n  //         }\n  //         // update position of scrollbar \n  //         imageList.addEventListener(\"scroll\", () => {\n  //             handleSlideButtons();\n  //         })\n  //         })\n  // }\n  // window.addEventListener(\"load\", initSlider)\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies-slider\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"one-button\",\n      children: categories.filter((oneCategory, index) => {\n        return oneCategory === props.categoryOfMovies;\n      })\n      // categories.map((oneCategory, index) => {\n      //     return <button className=\"one-button\" key={index} onClick={()=> setTypeOfMovie(oneCategory)}>{oneCategory}</button>\n      // })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(FaArrowCircleLeft, {\n        id: \"prev-slide\",\n        className: \"arrow-button arrow-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-list\",\n        children: vysledneFilmy.map(oneMovie => {\n          const {\n            id,\n            image,\n            title,\n            age,\n            tags,\n            description,\n            category\n          } = oneMovie;\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"one-movie\",\n            src: image,\n            alt: \"movie-image\"\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FaArrowCircleRight, {\n        className: \"arrow-button arrow-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 12\n  }, this);\n};\n_c = MovieSlider;\nexport default MovieSlider;\nvar _c;\n$RefreshReg$(_c, \"MovieSlider\");","map":{"version":3,"names":["allMovies","useState","useEffect","categories","FaArrowCircleLeft","FaArrowCircleRight","jsxDEV","_jsxDEV","MovieSlider","props","typeOfMovie","categoryOfMovies","vysledneFilmy","filter","oneMovie","includes","className","children","oneCategory","index","fileName","_jsxFileName","lineNumber","columnNumber","id","map","image","title","age","tags","description","category","src","alt","_c","$RefreshReg$"],"sources":["/Users/lukasrucky/Documents/GitHub/netflix-project/src/components/MovieSlider.js"],"sourcesContent":["import \"../components/MovieSlider.css\"\nimport allMovies from \"../data\"\nimport { useState, useEffect } from \"react\"\nimport categories from \"./categories\"\nimport { FaArrowCircleLeft, FaArrowCircleRight } from 'react-icons/fa';\n\nconst MovieSlider = (props) => {\n    const typeOfMovie = props.categoryOfMovies\n    const vysledneFilmy = allMovies.filter((oneMovie) => {\n        return oneMovie[\"category\"].includes(typeOfMovie)\n    })\n    \n    // useEffect(() => {\n    //     const initSlider = () => {\n    //         const singleSlider = document.querySelectorAll(\".movie-slider\");\n    //         console.log(singleSlider);\n    //         singleSlider.forEach((oneSlider) => {\n    //             const slideButtons = oneSlider.querySelectorAll(\".arrow-button\");\n    //             const imageList = oneSlider.querySelector(\".movies-list\");\n    //             const maxScrollLeft = imageList.scrollWidth - imageList.clientWidth;\n\n    //             // Slide images according to slide buttons click\n    //             slideButtons.forEach(button => {\n    //             button.addEventListener(\"click\", () => {\n    //                 const direction = button.id === \"prev-slide\" ? -1 : 1;\n    //                 const scrollAmount = imageList.clientWidth * direction;\n    //                 imageList.scrollBy({ left: scrollAmount, behavior: \"smooth\"})\n    //             })\n    //         })\n    //         // Hiding the buttons\n    //         const handleSlideButtons = () => {\n    //             slideButtons[0].style.display = imageList.scrollLeft <= 0 ? \"none\" : \"block\";\n    //             slideButtons[1].style.display = imageList.scrollLeft >= maxScrollLeft ? \"none\" : \"block\";\n    //         }\n    //         // update position of scrollbar \n    //         imageList.addEventListener(\"scroll\", () => {\n    //             handleSlideButtons();\n    //         })\n    //         })\n    // }\n    // window.addEventListener(\"load\", initSlider)\n    // })\n    \n    return <div className=\"movies-slider\">\n        <div className=\"one-button\">\n            {\n                categories.filter((oneCategory, index) => {\n                    return oneCategory === props.categoryOfMovies\n                })\n                // categories.map((oneCategory, index) => {\n                //     return <button className=\"one-button\" key={index} onClick={()=> setTypeOfMovie(oneCategory)}>{oneCategory}</button>\n                // })\n            }\n        </div>\n        <div className=\"slider-wrapper\">\n            <FaArrowCircleLeft id=\"prev-slide\" className=\"arrow-button arrow-left\"/>\n            <div className=\"movies-list\">\n                {\n                    vysledneFilmy.map((oneMovie) => {\n                        const {id, image, title, age, tags, description, category} = oneMovie\n\n                        return <img className=\"one-movie\" src={image} alt=\"movie-image\" key={id}/>\n                    })\n                }\n            </div>\n            <FaArrowCircleRight className=\"arrow-button arrow-right\" />\n            \n        </div>\n    </div>\n}\n\nexport default MovieSlider\n"],"mappings":";AAAA,OAAO,+BAA+B;AACtC,OAAOA,SAAS,MAAM,SAAS;AAC/B,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,iBAAiB,EAAEC,kBAAkB,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC3B,MAAMC,WAAW,GAAGD,KAAK,CAACE,gBAAgB;EAC1C,MAAMC,aAAa,GAAGZ,SAAS,CAACa,MAAM,CAAEC,QAAQ,IAAK;IACjD,OAAOA,QAAQ,CAAC,UAAU,CAAC,CAACC,QAAQ,CAACL,WAAW,CAAC;EACrD,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBAAOH,OAAA;IAAKS,SAAS,EAAC,eAAe;IAAAC,QAAA,gBACjCV,OAAA;MAAKS,SAAS,EAAC,YAAY;MAAAC,QAAA,EAEnBd,UAAU,CAACU,MAAM,CAAC,CAACK,WAAW,EAAEC,KAAK,KAAK;QACtC,OAAOD,WAAW,KAAKT,KAAK,CAACE,gBAAgB;MACjD,CAAC;MACD;MACA;MACA;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC,eACNhB,OAAA;MAAKS,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BV,OAAA,CAACH,iBAAiB;QAACoB,EAAE,EAAC,YAAY;QAACR,SAAS,EAAC;MAAyB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACxEhB,OAAA;QAAKS,SAAS,EAAC,aAAa;QAAAC,QAAA,EAEpBL,aAAa,CAACa,GAAG,CAAEX,QAAQ,IAAK;UAC5B,MAAM;YAACU,EAAE;YAAEE,KAAK;YAAEC,KAAK;YAAEC,GAAG;YAAEC,IAAI;YAAEC,WAAW;YAAEC;UAAQ,CAAC,GAAGjB,QAAQ;UAErE,oBAAOP,OAAA;YAAKS,SAAS,EAAC,WAAW;YAACgB,GAAG,EAAEN,KAAM;YAACO,GAAG,EAAC;UAAa,GAAMT,EAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAC9E,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL,CAAC,eACNhB,OAAA,CAACF,kBAAkB;QAACW,SAAS,EAAC;MAA0B;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AACV,CAAC;AAAAW,EAAA,GA/DK1B,WAAW;AAiEjB,eAAeA,WAAW;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}