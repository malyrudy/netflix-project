{"ast":null,"code":"var _jsxFileName = \"/Users/lukasrucky/Documents/GitHub/netflix-project/src/components/MovieSlider.js\",\n  _s = $RefreshSig$();\n// import \"../components/MovieSlider.css\"\n// import allMovies from \"../data\"\n// import { useState } from \"react\"\n// import categories from \"./categories\"\n// import { FaArrowCircleLeft, FaArrowCircleRight } from 'react-icons/fa';\n\n// const MovieSlider = (props) => {\n//     const [typeOfMovie, setTypeOfMovie] = useState(props.categoryOfMovies)\n//     console.log(props);\n\n//     const vysledneFilmy = allMovies.filter((oneMovie) => {\n//         return oneMovie[\"category\"].includes(typeOfMovie)\n//     })\n\n//     const initSlider = () => {\n//         const slideButtons = document.querySelectorAll(\".arrow-button\");\n//         const imageList = document.querySelector(\".movies-list\");\n//         const maxScrollLeft = imageList.scrollWidth - imageList.clientWidth;\n\n//         // Slide images according to slide buttons click\n//         slideButtons.forEach(button => {\n//             button.addEventListener(\"click\", () => {\n//                 const direction = button.id === \"prev-slide\" ? -1 : 1;\n//                 const scrollAmount = imageList.clientWidth * direction;\n//                 imageList.scrollBy({ left: scrollAmount, behavior: \"smooth\"})\n//             })\n//         })\n//         // Hiding the buttons\n//         const handleSlideButtons = () => {\n//             slideButtons[0].style.display = imageList.scrollLeft <= 0 ? \"none\" : \"block\";\n//             slideButtons[1].style.display = imageList.scrollLeft >= maxScrollLeft ? \"none\" : \"block\";\n//         }\n//         // update position of scrollbar \n//         imageList.addEventListener(\"scroll\", () => {\n//             handleSlideButtons();\n//         })\n//     }\n\n//     window.addEventListener(\"load\", initSlider)\n\n//     return <div className=\"movies-slider\">\n//         <div className=\"one-button\">\n//             {\n//                 categories.filter((oneCategory, index) => {\n//                     return oneCategory === props.categoryOfMovies\n//                 })\n//                 // categories.map((oneCategory, index) => {\n//                 //     return <button className=\"one-button\" key={index} onClick={()=> setTypeOfMovie(oneCategory)}>{oneCategory}</button>\n//                 // })\n//             }\n//         </div>\n//         <div className=\"slider-wrapper\">\n//             <FaArrowCircleLeft id=\"prev-slide\" className=\"arrow-button arrow-left\"/>\n//             <div className=\"movies-list\">\n//                 {\n//                     vysledneFilmy.map((oneMovie) => {\n//                         const {id, image, title, age, tags, description, category} = oneMovie\n\n//                         return <img className=\"one-movie\" src={image} alt=\"movie-image\" key={id}/>\n//                     })\n//                 }\n//             </div>\n//             <FaArrowCircleRight className=\"arrow-button arrow-right\" />\n\n//         </div>\n\n//     </div>\n// }\n\n// export default MovieSlider\n\nimport \"../components/MovieSlider.css\";\nimport allMovies from \"../data\";\nimport { useState, useEffect } from \"react\";\nimport categories from \"./categories\";\nimport { FaArrowCircleLeft, FaArrowCircleRight } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieSlider = ({\n  categoryOfMovies\n}) => {\n  _s();\n  const [typeOfMovie, setTypeOfMovie] = useState(categoryOfMovies);\n  const [vysledneFilmy, setVysledneFilmy] = useState([]);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  useEffect(() => {\n    const filteredMovies = allMovies.filter(oneMovie => {\n      return oneMovie[\"category\"].includes(typeOfMovie);\n    });\n    setVysledneFilmy(filteredMovies);\n  }, [typeOfMovie]);\n  useEffect(() => {\n    const imageList = document.querySelector(\".movies-list\");\n    const maxScrollLeft = imageList.scrollWidth - imageList.clientWidth;\n    const initSlider = () => {\n      const slideButtons = document.querySelectorAll(\".arrow-button\");\n      slideButtons.forEach(button => {\n        button.addEventListener(\"click\", () => {\n          const direction = button.id === \"prev-slide\" ? -1 : 1;\n          const scrollAmount = imageList.clientWidth * direction;\n          imageList.scrollBy({\n            left: scrollAmount,\n            behavior: \"smooth\"\n          });\n          setScrollPosition(imageList.scrollLeft + scrollAmount);\n        });\n      });\n      const handleSlideButtons = () => {\n        slideButtons[0].style.display = scrollPosition <= 0 ? \"none\" : \"block\";\n        slideButtons[1].style.display = scrollPosition >= maxScrollLeft ? \"none\" : \"block\";\n      };\n      imageList.addEventListener(\"scroll\", () => {\n        setScrollPosition(imageList.scrollLeft);\n        handleSlideButtons();\n      });\n    };\n    initSlider();\n    return () => {\n      const slideButtons = document.querySelectorAll(\".arrow-button\");\n      slideButtons.forEach(button => {\n        button.removeEventListener(\"click\", () => {});\n      });\n    };\n  }, [scrollPosition]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies-slider\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"one-button\",\n      children: categories.filter((oneCategory, index) => oneCategory === categoryOfMovies).map((oneCategory, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"one-button\",\n        onClick: () => setTypeOfMovie(oneCategory),\n        children: oneCategory\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(FaArrowCircleLeft, {\n        id: \"prev-slide\",\n        className: \"arrow-button arrow-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-list\",\n        children: vysledneFilmy.map(oneMovie => {\n          const {\n            id,\n            image\n          } = oneMovie;\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"one-movie\",\n            src: image,\n            alt: \"movie-image\"\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaArrowCircleRight, {\n        className: \"arrow-button arrow-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieSlider, \"ir0a00zAwwxH+5MOb7/HRxat3s4=\");\n_c = MovieSlider;\nexport default MovieSlider;\nvar _c;\n$RefreshReg$(_c, \"MovieSlider\");","map":{"version":3,"names":["allMovies","useState","useEffect","categories","FaArrowCircleLeft","FaArrowCircleRight","jsxDEV","_jsxDEV","MovieSlider","categoryOfMovies","_s","typeOfMovie","setTypeOfMovie","vysledneFilmy","setVysledneFilmy","scrollPosition","setScrollPosition","filteredMovies","filter","oneMovie","includes","imageList","document","querySelector","maxScrollLeft","scrollWidth","clientWidth","initSlider","slideButtons","querySelectorAll","forEach","button","addEventListener","direction","id","scrollAmount","scrollBy","left","behavior","scrollLeft","handleSlideButtons","style","display","removeEventListener","className","children","oneCategory","index","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","image","src","alt","_c","$RefreshReg$"],"sources":["/Users/lukasrucky/Documents/GitHub/netflix-project/src/components/MovieSlider.js"],"sourcesContent":["// import \"../components/MovieSlider.css\"\n// import allMovies from \"../data\"\n// import { useState } from \"react\"\n// import categories from \"./categories\"\n// import { FaArrowCircleLeft, FaArrowCircleRight } from 'react-icons/fa';\n\n// const MovieSlider = (props) => {\n//     const [typeOfMovie, setTypeOfMovie] = useState(props.categoryOfMovies)\n//     console.log(props);\n\n//     const vysledneFilmy = allMovies.filter((oneMovie) => {\n//         return oneMovie[\"category\"].includes(typeOfMovie)\n//     })\n    \n//     const initSlider = () => {\n//         const slideButtons = document.querySelectorAll(\".arrow-button\");\n//         const imageList = document.querySelector(\".movies-list\");\n//         const maxScrollLeft = imageList.scrollWidth - imageList.clientWidth;\n    \n//         // Slide images according to slide buttons click\n//         slideButtons.forEach(button => {\n//             button.addEventListener(\"click\", () => {\n//                 const direction = button.id === \"prev-slide\" ? -1 : 1;\n//                 const scrollAmount = imageList.clientWidth * direction;\n//                 imageList.scrollBy({ left: scrollAmount, behavior: \"smooth\"})\n//             })\n//         })\n//         // Hiding the buttons\n//         const handleSlideButtons = () => {\n//             slideButtons[0].style.display = imageList.scrollLeft <= 0 ? \"none\" : \"block\";\n//             slideButtons[1].style.display = imageList.scrollLeft >= maxScrollLeft ? \"none\" : \"block\";\n//         }\n//         // update position of scrollbar \n//         imageList.addEventListener(\"scroll\", () => {\n//             handleSlideButtons();\n//         })\n//     }\n\n//     window.addEventListener(\"load\", initSlider)\n\n//     return <div className=\"movies-slider\">\n//         <div className=\"one-button\">\n//             {\n//                 categories.filter((oneCategory, index) => {\n//                     return oneCategory === props.categoryOfMovies\n//                 })\n//                 // categories.map((oneCategory, index) => {\n//                 //     return <button className=\"one-button\" key={index} onClick={()=> setTypeOfMovie(oneCategory)}>{oneCategory}</button>\n//                 // })\n//             }\n//         </div>\n//         <div className=\"slider-wrapper\">\n//             <FaArrowCircleLeft id=\"prev-slide\" className=\"arrow-button arrow-left\"/>\n//             <div className=\"movies-list\">\n//                 {\n//                     vysledneFilmy.map((oneMovie) => {\n//                         const {id, image, title, age, tags, description, category} = oneMovie\n\n//                         return <img className=\"one-movie\" src={image} alt=\"movie-image\" key={id}/>\n//                     })\n//                 }\n//             </div>\n//             <FaArrowCircleRight className=\"arrow-button arrow-right\" />\n            \n//         </div>\n        \n//     </div>\n// }\n\n// export default MovieSlider\n\nimport \"../components/MovieSlider.css\";\nimport allMovies from \"../data\";\nimport { useState, useEffect } from \"react\";\nimport categories from \"./categories\";\nimport { FaArrowCircleLeft, FaArrowCircleRight } from \"react-icons/fa\";\n\nconst MovieSlider = ({ categoryOfMovies }) => {\n  const [typeOfMovie, setTypeOfMovie] = useState(categoryOfMovies);\n  const [vysledneFilmy, setVysledneFilmy] = useState([]);\n  const [scrollPosition, setScrollPosition] = useState(0);\n\n  useEffect(() => {\n    const filteredMovies = allMovies.filter((oneMovie) => {\n      return oneMovie[\"category\"].includes(typeOfMovie);\n    });\n    setVysledneFilmy(filteredMovies);\n  }, [typeOfMovie]);\n\n  useEffect(() => {\n    const imageList = document.querySelector(\".movies-list\");\n    const maxScrollLeft = imageList.scrollWidth - imageList.clientWidth;\n\n    const initSlider = () => {\n      const slideButtons = document.querySelectorAll(\".arrow-button\");\n\n      slideButtons.forEach((button) => {\n        button.addEventListener(\"click\", () => {\n          const direction = button.id === \"prev-slide\" ? -1 : 1;\n          const scrollAmount = imageList.clientWidth * direction;\n          imageList.scrollBy({ left: scrollAmount, behavior: \"smooth\" });\n          setScrollPosition(imageList.scrollLeft + scrollAmount);\n        });\n      });\n\n      const handleSlideButtons = () => {\n        slideButtons[0].style.display = scrollPosition <= 0 ? \"none\" : \"block\";\n        slideButtons[1].style.display =\n          scrollPosition >= maxScrollLeft ? \"none\" : \"block\";\n      };\n\n      imageList.addEventListener(\"scroll\", () => {\n        setScrollPosition(imageList.scrollLeft);\n        handleSlideButtons();\n      });\n    };\n\n    initSlider();\n\n    return () => {\n      const slideButtons = document.querySelectorAll(\".arrow-button\");\n\n      slideButtons.forEach((button) => {\n        button.removeEventListener(\"click\", () => {});\n      });\n    };\n  }, [scrollPosition]);\n\n  return (\n    <div className=\"movies-slider\">\n      <div className=\"one-button\">\n        {categories\n          .filter((oneCategory, index) => oneCategory === categoryOfMovies)\n          .map((oneCategory, index) => (\n            <button\n              className=\"one-button\"\n              key={index}\n              onClick={() => setTypeOfMovie(oneCategory)}\n            >\n              {oneCategory}\n            </button>\n          ))}\n      </div>\n      <div className=\"slider-wrapper\">\n        <FaArrowCircleLeft id=\"prev-slide\" className=\"arrow-button arrow-left\" />\n        <div className=\"movies-list\">\n          {vysledneFilmy.map((oneMovie) => {\n            const { id, image } = oneMovie;\n            return <img className=\"one-movie\" src={image} alt=\"movie-image\" key={id} />;\n          })}\n        </div>\n        <FaArrowCircleRight className=\"arrow-button arrow-right\" />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieSlider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}